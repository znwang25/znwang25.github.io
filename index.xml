<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on Zenan Wang&#39;s Site</title>
    <link>https://zenan-wang.com/</link>
    <description>Recent content in Homepage on Zenan Wang&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zenan-wang.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Package: fuzzychinese</title>
      <link>https://zenan-wang.com/projects/fuzzychinese/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zenan-wang.com/projects/fuzzychinese/</guid>
      <description>Fuzzy Matching Chinese Words  fuzzychinese  Star 
Documentation 
I wrote this package while I was frustrated with matching Chinese city names from different data sources. Sometimes, the names seem to be identical but are actually representing different characters. For example, 汩罗市 and 汨罗市. Other times, abbreviated names are used, such as 长阳县 for 长阳土家族自治县.
It got me thinking, is there any way to match those words?
The solution I came up with is to dive into sub-character level to perform matching.</description>
    </item>
    
    <item>
      <title>React Widget: Drag and Drop with Multi-selection</title>
      <link>https://zenan-wang.com/projects/react_dnd_multi_selection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zenan-wang.com/projects/react_dnd_multi_selection/</guid>
      <description>React Drag and Drop with Multi-selection  react-dnd-multiple-selection  Star 
I wrote a simple widget that implements multiple selection drag and drop behavior using the react-dnd library and react hooks.
This was inspired and based on@melvynhills &amp;rsquo;s solution posted in this issue . But his implementation was using the legacy APIs, so I rewrote the component using new APIs as of 2020.
some text   </description>
    </item>
    
    <item>
      <title>How to use CVR as an objective in multi-armed bandit experiments</title>
      <link>https://zenan-wang.com/personal/banditcvr/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zenan-wang.com/personal/banditcvr/</guid>
      <description>How to use CVR as an objective in multi-armed bandit experiments  This article draws on our published paper  in the Web Conference 2022 
 Photo by Mitchel Boot  on Unsplash 
Intro Multi-armed bandit (MAB) has become an increasingly important tool for experimentation and has been widely adopted by the industry giants such as Google, Meta, Netflix, LinkedIn, etc. to conduct efficient experiments. However, widely-used MAB test designs require the objective of interest to provide instantaneous feedback in order to update the assignment probability to each variant.</description>
    </item>
    
    <item>
      <title>Scraping Tool for Records of Chinese Administrative Areas</title>
      <link>https://zenan-wang.com/projects/china_admincode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zenan-wang.com/projects/china_admincode/</guid>
      <description>Scraping Records of Chinese Administrative Areas （2009-2017）  china_admincode  Star 
(爬虫扒取中国乡镇区划代码历史数据 2009 - 2017)
All chinese administrative units have a unique identifier, aka gbcode. Those identifiers are widely used in almost all chinese applications. However, each year some of the gbcode will be changed due to changes in administrative units (name change, boundary change, jurisdiction change etc.). This project aims to preserve the historical record of the gbcode by scraping gbcode for all township and above units from National Bureau of Statistics of the PRC website.</description>
    </item>
    
  </channel>
</rss>
